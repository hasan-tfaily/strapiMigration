version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: strapi_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: strapi_production
      POSTGRES_USER: strapi_user
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - strapi_network

  # Strapi Application
  strapi:
    build: .
    container_name: strapi_app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_CLIENT: postgres
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: strapi_production
      DATABASE_USERNAME: strapi_user
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_SSL: false
      HOST: 0.0.0.0
      PORT: 1337
      APP_KEYS: ${APP_KEYS}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      TRANSFER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT}
      NODE_OPTIONS: --max-old-space-size=4096
    volumes:
      - ./public/uploads:/app/public/uploads
    ports:
      - "1337:1337"
    depends_on:
      - postgres
    networks:
      - strapi_network
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: strapi_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - strapi
    networks:
      - strapi_network

volumes:
  postgres_data:

networks:
  strapi_network:
    driver: bridge
